/**
* Autogenerated by Service Builder v2.0.5. Do not edit.
* Version: 1.0.9
* Built Wed Nov 16 2022 20:00:23 GMT-0000 (GMT)
* Built to pageName:/OpenForum/AddOn/DataLogger fileName:get.sjs
**/
/*
* Author: 
* Description: 
*/
var action = transaction.getParameter("action");
if(action===null) {
    transaction.setResult(transaction.SHOW_PAGE);
    return;
}

try{
action = ""+action;
result = {result: "error", message: "Action "+action+" not recognised."};


    var DataLogger = js.getObject("/OpenForum/AddOn/DataLogger","DataLogger.sjs");


    var action = transaction.getParameter("action");
    if(action===null) {
     throw "Request is missing required parameter action";
    }
     action = "" + action;
if(action==="logData") {
    var record = transaction.getParameter("record");
    if(record===null) {
     throw "Request is missing required parameter record";
    } else {
     record = "" + record;
    }

    var serviceId = transaction.getParameter("serviceId");
    if(serviceId===null) {
     throw "Request is missing required parameter serviceId";
    } else {
     serviceId = "" + serviceId;
    }

    var deviceId = transaction.getParameter("deviceId");
    if(deviceId===null) {
     throw "Request is missing required parameter deviceId";
    } else {
     deviceId = "" + deviceId;
    }

    var deviceType = transaction.getParameter("deviceType");
    if(deviceType===null) {
     throw "Request is missing required parameter deviceType";
    } else {
     deviceType = "" + deviceType;
    }

    var time = transaction.getParameter("time");
    if(time===null) {
     throw "Request is missing required parameter time";
    } else {
     time = "" + time;
    }

    var data = transaction.getParameter("data");
    if(data===null) {
     throw "Request is missing required parameter data";
    } else {
     data = "" + data;
    }

    result = DataLogger.logData(data,serviceId,deviceId,deviceType,time,record,transaction);
}
if(action==="getValue") {
    var serviceId = transaction.getParameter("serviceId");
    if(serviceId===null) {
     throw "Request is missing required parameter serviceId";
    } else {
     serviceId = "" + serviceId;
    }

    var deviceId = transaction.getParameter("deviceId");
    if(deviceId===null) {
     throw "Request is missing required parameter deviceId";
    } else {
     deviceId = "" + deviceId;
    }

    var key = transaction.getParameter("key");
    if(key===null) {
     throw "Request is missing required parameter key";
    } else {
     key = "" + key;
    }

    result = DataLogger.getLatestValue(serviceId,deviceId,key);
}
if(action==="getData") {
    var serviceId = transaction.getParameter("serviceId");
    if(serviceId===null) {
     throw "Request is missing required parameter serviceId";
    } else {
     serviceId = "" + serviceId;
    }

    var deviceId = transaction.getParameter("deviceId");
    if(deviceId===null) {
     throw "Request is missing required parameter deviceId";
    } else {
     deviceId = "" + deviceId;
    }

    var key = transaction.getParameter("key");
    if(key===null) {
     throw "Request is missing required parameter key";
    } else {
     key = "" + key;
    }

    var startTime = transaction.getParameter("startTime");
    if(startTime===null) {
     throw "Request is missing required parameter startTime";
    } else {
     startTime = "" + startTime;
    }

    var endTime = transaction.getParameter("endTime");
    if(endTime===null) {
     throw "Request is missing required parameter endTime";
    } else {
     endTime = "" + endTime;
    }

    var groupBy = transaction.getParameter("groupBy");
     if(groupBy===null) {
       delete groupBy;
     } else {
     groupBy = "" + groupBy;
    }

    result = DataLogger.getData( serviceId,deviceId,key,startTime,endTime,groupBy );
}

} catch(e) {
  var message = "Error:"+e;
  if( typeof e.lineNumber != "undefined" ) {
    message += " on line "+e.lineNumber;
  }
  if( typeof e.sourceName != "undefined" ) {
    message += " in "+e.sourceName;
  }
  
  transaction.sendJSON( JSON.stringify({result: "error",message: message}));
  return;
}
  
transaction.sendJSON( JSON.stringify(result) );
