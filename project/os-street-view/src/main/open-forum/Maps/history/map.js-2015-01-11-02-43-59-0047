var canvas;

var locationX = 600000;
var locationY = 300000;

var status;

var MapLayer = function(canvas) {
  
  var blankTile = "/Maps/OSStreetView/blank.png";
  var imageWidth = 5004;
  var imageHeight = 5004;
  
  var offsetX = (canvas.width/2)-(imageWidth/2);
  var offsetY = (canvas.height/2)-(imageHeight/2);
  
  var lastMapX = 0;
  var lastMapY = 0;
  
  var tile1 = new Picture(	offsetX-imageWidth,     offsetY-imageHeight,  blankTile);
  var tile2 = new Picture(	offsetX,                         offsetY-imageHeight,  blankTile);
  var tile3 = new Picture(	offsetX+imageWidth,    offsetY-imageHeight,  blankTile);
  
  
  var tile4 = new Picture(	offsetX-imageWidth,     offsetY,                       blankTile);
  var tile5 = new Picture(	offsetX,                         offsetY,                       blankTile);
  var tile6 = new Picture(	offsetX+imageWidth,    offsetY,                       blankTile);
  
  var tile7 = new Picture(	offsetX-imageWidth,     offsetY+imageHeight, blankTile);
  var tile8 = new Picture(	offsetX,                         offsetY+imageHeight, blankTile);
  var tile9 = new Picture(	offsetX+imageWidth,    offsetY+imageHeight, blankTile);
  
  var map = new Composite(0,0);
  map.add(tile1);
  map.add(tile2);
  map.add(tile3);
  map.add(tile4);
  map.add(tile5);
  map.add(tile6);
  map.add(tile7);
  map.add(tile8);
  map.add(tile9);
  
  canvas.add(map);
  canvas.makeDraggable(map);
  canvas.addAnimationListener(this);
  
   var updateTiles = function() {
  
    var tileSource = OSMap.getTile(  locationX-imageWidth,  locationY-imageHeight);
    tile1.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
     tileSource = OSMap.getTile(  locationX,                           locationY-imageHeight);
    tile2.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
     tileSource = OSMap.getTile(  locationX+imageWidth,      locationY-imageHeight);
    tile3.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;

     tileSource = OSMap.getTile(  locationX-imageWidth,       locationY);
    tile4.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
     tileSource = OSMap.getTile(  locationX,                           locationY);
    tile5.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
     tileSource = OSMap.getTile(  locationX+imageWidth,      locationY);
    console.log(tileSource);
    tile6.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;

     tileSource = OSMap.getTile(  locationX-imageWidth,       locationY+imageHeight);
    tile7.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
     tileSource = OSMap.getTile(  locationX,                           locationY+imageHeight);
    tile8.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
     tileSource = OSMap.getTile(  locationX+imageWidth,      locationY+imageHeight);
    tile9.img.src = "/Maps/OSStreetView/NorfolkStreetView/" + tileSource;
  };
  
  this.processFrame = function(frame) {
      var sx = map.x;
      var sy = map.y;
      var lx = lastMapX;
      var ly = lastMapY;

      var dx = 0;
      var dy = 0;

      if(map.x!==lastMapX) {
        dx = map.x-lastMapX;
        locationX -= dx;
        lastMapX = map.x;
      }
      if(map.y!==lastMapY) {
        dy = map.y-lastMapY;
        console.log("dy:"+dy+" my:"+map.y+" lx:"+lastMapY);

        locationY += dy;
        lastMapY = map.y;
      }

      var needsUpdate = false;
      if(map.x<-imageWidth || map.x>imageWidth) {
        map.x = 0;
        console.log("Map x = 0 = "+map.x+" dx:"+dx);
        lastMapX = 0;
        needsUpdate=true;
      }

      if(map.y<-imageHeight || map.y>imageHeight) {
        map.y = 0;
        console.log("Map y = 0 = "+map.y+" dy:"+dy);
        lastMapY = 0;
        needsUpdate=true;
      }

      if( needsUpdate ) {
        console.log("updateTiles ("+frame+") lx:"+locationX+" ly:"+locationY+" mx:"+sx+" my:"+sy+" lsx:"+lx+" lsy:"+ly+" m2x:"+map.x+" m2y:"+map.y);
        updateTiles();
      }
  };
};

function initMap() {
  canvas =new Canvas("mapCanvas");
  Giraffe.Interactive.setInteractive(canvas);
  canvas.add( new Rectangle(0,0,screenWidth,screenHeight).setFillColor("#003300") );
  Giraffe.setAnimated(canvas);
  mapLayer = new MapLayer(canvas);
  
  canvas.startAnimation(20,100,true);
  
  canvas.add( new Rectangle(5,5,800,35).setFillColor("white").setColor("black") );
  state = new Text(30,30,"Status: ",25,"Arial").setFillColor("#0000cc");
  state.animate = function(frame) {
    state.text = "X:"+locationX+" Y:"+locationY;
  };
  
  canvas.add( state );
}

